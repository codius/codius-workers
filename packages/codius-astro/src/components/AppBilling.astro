---
import CardField from "@/components/CardField.astro"
import { Label } from "@/components/ui/label"
import { CostTooltip } from "@/components/CostTooltip"
import { getWorkerTotalCost, nanoUSDToString } from "@/lib/utils"
import type { WorkerBilling } from "billing-durable-object"

interface Props {
  appId: string
}

const { appId } = Astro.props

const getWorkerBilling = async (): Promise<WorkerBilling> => {
  // Workaround for:
  // Cannot access `BillingDurableObject#getWorkerBilling` as Durable Object RPC is not yet supported between multiple `wrangler dev` sessions.
  if (process.env.NODE_ENV === "development") {
    return {
      requests: {
        total: 0n,
        totalAllowed: 1000000n,
      },
      funding: {
        totalNanoUSD: 1_000_000_000n,
      },
      pricing: {
        unitPriceNanoUSD: 300_000_000n,
        requestsPerUnit: 1_000_000n,
        includedRequests: 100n,
      },
    }
  } else {
    const billingId: DurableObjectId =
      Astro.locals.runtime.env.BILLING_DURABLE_OBJECT.idFromName(appId)
    const billing =
      Astro.locals.runtime.env.BILLING_DURABLE_OBJECT.get(billingId)
    return await billing.getWorkerBilling()
  }
}

const workerBilling = await getWorkerBilling()

const totalCost = getWorkerTotalCost(workerBilling)
---

<div class="grid w-full items-center gap-4">
  <CardField
    label="Requests"
    content={workerBilling.requests.total.toString()}
  />
  <CardField
    label="Remaining Requests"
    content={(
      workerBilling.requests.totalAllowed - workerBilling.requests.total
    ).toString()}
  />
  <CardField content={nanoUSDToString(totalCost)}>
    <div class="flex items-center space-x-2" slot="label">
      <Label>Total Cost</Label>
      <div class="ml-4">
        <CostTooltip client:only="react" {...workerBilling.pricing} />
      </div>
    </div>
  </CardField>
  <CardField
    label="Total Funding"
    content={nanoUSDToString(workerBilling.funding.totalNanoUSD)}
  />
  <CardField
    label="Balance"
    content={nanoUSDToString(workerBilling.funding.totalNanoUSD - totalCost)}
  />
</div>
