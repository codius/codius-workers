---
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { actions, isInputError } from "astro:actions"

const result = Astro.getActionResult(actions.app.create)
const inputErrors = isInputError(result?.error) ? result.error.fields : {}
---

<form method="POST" action={actions.app.create}>
  <Label htmlFor="repoUrl"> GitHub Repository </Label>
  <Input
    name="repoUrl"
    type="text"
    id="repoUrl"
    required
    pattern="^https:\/\/github\.com\/[^\/]+\/[^\/]+$"
    title="URL must follow the format 'https://github.com/username/repository'"
  />
  <p class="text-sm text-muted-foreground">
    The GitHub repository containing the Cloudflare Worker you want to deploy
  </p>
  {
    inputErrors.repoUrl && (
      <p class="text-sm font-medium text-destructive">{inputErrors.repoUrl}</p>
    )
  }
  <Label htmlFor="branch"> Branch </Label>
  <Input type="text" id="branch" name="branch" defaultValue="main" required />
  <p class="text-sm text-muted-foreground">
    The GitHub repository branch you want to deploy
  </p>
  {
    inputErrors.branch && (
      <p class="text-sm font-medium text-destructive">{inputErrors.branch}</p>
    )
  }
  <Label htmlFor="directory"> Directory </Label>
  <Input type="text" id="directory" name="directory" />
  <p class="text-sm text-muted-foreground">
    The directory within the repository where the worker is located (optional)
  </p>
  {
    inputErrors.directory && (
      <p class="text-sm font-medium text-destructive">
        {inputErrors.directory}
      </p>
    )
  }
  <Button type="submit">Deploy App</Button>
  {
    result?.error && !isInputError(result.error) && (
      <p class="text-sm font-medium text-destructive">{result.error.message}</p>
    )
  }
</form>
