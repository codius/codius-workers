---
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card"
import { FiGithub } from "react-icons/fi"
import AppBilling from "@/components/AppBilling.astro"
import AppStatusBadge from "@/components/AppStatusBadge.astro"
import AppUrl from "@/components/AppUrl.astro"
import CardField from "@/components/CardField.astro"
import DeleteAppButton from "@/components/DeleteAppButton.astro"
import TopUpBalanceButton from "@/components/TopUpBalanceButton.astro"
import ViewWorkflowButton from "@/components/ViewWorkflowButton.astro"
import Layout from "@/layouts/Layout.astro"

if (!Astro.params.id) {
  return Astro.redirect("/apps")
}

const app = await Astro.locals.db.apps.getById(Astro.params.id)

if (!app) {
  return new Response(null, {
    status: 404,
    statusText: "Not found",
  })
}

const userIsDeployer = Astro.locals.user?.id === app.deployer.id

if (app.status !== "deployed" && !userIsDeployer) {
  return new Response(null, {
    status: 404,
    statusText: "Not found",
  })
}
---

<Layout>
  <main>
    <Card>
      <CardHeader>
        <CardTitle>
          <AppUrl app={app} />
        </CardTitle>
        <CardDescription
          >Deployed by <a
            href={`https://github.com/${app.deployer.username}`}
            target="_blank"
            rel="noopener noreferrer">{app.deployer.username}</a
          >
        </CardDescription>
        <CardContent>
          {
            userIsDeployer && (
              <div class="flex flex-col items-start mb-4 gap-4">
                <CardField label="Status">
                  <AppStatusBadge app={app} slot="content" />
                </CardField>
                {app.githubWorkflowRunId && (
                  <ViewWorkflowButton workflowRunId={app.githubWorkflowRunId} />
                )}
              </div>
            )
          }
          <div class="grid grid-cols-2 gap-4">
            <div class="col-span-1 grid gap-4">
              <CardField label="Repo">
                <a
                  href={`https://github.com/${app.githubOwner}/${app.repo}`}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="inline-flex items-center"
                  style="align-items: baseline;"
                  slot="content"
                >
                  <FiGithub className="mr-2" />{app.githubOwner}/{app.repo}
                </a>
              </CardField>
              <CardField
                label="Git Ref (at time of deploy)"
                content={app.gitRef}
                link={`https://github.com/${app.githubOwner}/${app.repo}/tree/${app.gitRef}`}
              />
              <CardField
                label="Commit"
                content={app.commitHash}
                link={`https://github.com/${app.githubOwner}/${app.repo}/tree/${app.commitHash}`}
              />
              <CardField
                label="Directory"
                content={app.directory || "/"}
                link={`https://github.com/${app.githubOwner}/${app.repo}/tree/${app.commitHash}/${app.directory}`}
              />
              <CardField
                label="Created At"
                content={new Date(app.createdAt + "Z").toUTCString()}
              />
              {
                app.deletedAt === null && userIsDeployer && (
                  <div>
                    <DeleteAppButton appId={app.id} />
                  </div>
                )
              }
            </div>
            <div class="col-span-1 grid gap-4">
              <AppBilling appId={app.id} />
              <div>
                <TopUpBalanceButton
                  appId={app.id}
                  disabled={app.deletedAt !== null}
                />
              </div>
            </div>
          </div>
        </CardContent>
      </CardHeader>
    </Card>
  </main>
</Layout>
