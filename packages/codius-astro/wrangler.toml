#:schema node_modules/wrangler/config-schema.json
name = "codius-astro"
compatibility_date = "2024-05-24"
pages_build_output_dir = "./dist"
compatibility_flags = ["nodejs_compat"]

# Automatically place your workloads in an optimal location to minimize latency.
# If you are running back-end logic in a Pages Function, running it closer to your back-end infrastructure
# rather than the end user may result in better performance.
# Docs: https://developers.cloudflare.com/pages/functions/smart-placement/#smart-placement
# [placement]
# mode = "smart"

# Variable bindings. These are arbitrary, plaintext strings (similar to environment variables)
# Docs:
# - https://developers.cloudflare.com/pages/functions/bindings/#environment-variables
# Note: Use secrets to store sensitive data.
# - https://developers.cloudflare.com/pages/functions/bindings/#secrets
[vars]
GITHUB_APP_NAME = "Codius Astro Local"
GITHUB_CLIENT_ID = "Ov23liIuGX3xy486HTL1"
CF_DISPATCH_NAMESPACE = "testing"
DISPATCHER_HOSTNAME = "coil.app"

# Bind the Workers AI model catalog. Run machine learning models, powered by serverless GPUs, on Cloudflare’s global network
# Docs: https://developers.cloudflare.com/pages/functions/bindings/#workers-ai
# [ai]
# binding = "AI"

# Bind a D1 database. D1 is Cloudflare’s native serverless SQL database.
# Docs: https://developers.cloudflare.com/pages/functions/bindings/#d1-databases
[[d1_databases]]
binding = "DB" # i.e. available in your Worker on env.DB
database_name = "test-codius-workers"
database_id = "799c2160-d538-4d84-a561-b422b5f9e365"
preview_database_id = "DB"
migrations_dir = "drizzle"

# Bind a Durable Object. Durable objects are a scale-to-zero compute primitive based on the actor model.
# Durable Objects can live for as long as needed. Use these when you need a long-running "server", such as in realtime apps.
# Docs: https://developers.cloudflare.com/workers/runtime-apis/durable-objects
[[durable_objects.bindings]]
name = "BILLING_DURABLE_OBJECT"
class_name = "BillingDurableObject"
script_name = 'dispatcher'

# Bind a KV Namespace. Use KV as persistent storage for small key-value pairs.
# Docs: https://developers.cloudflare.com/pages/functions/bindings/#kv-namespaces
# [[kv_namespaces]]
# binding = "MY_KV_NAMESPACE"
# id = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

# Bind a Queue producer. Use this binding to schedule an arbitrary task that may be processed later by a Queue consumer.
# Docs: https://developers.cloudflare.com/pages/functions/bindings/#queue-producers
# [[queues.producers]]
# binding = "MY_QUEUE"
# queue = "my-queue"

# Bind an R2 Bucket. Use R2 to store arbitrarily large blobs of data, such as files.
# Docs: https://developers.cloudflare.com/pages/functions/bindings/#r2-buckets
# [[r2_buckets]]
# binding = "MY_BUCKET"
# bucket_name = "my-bucket"

# Bind another Worker service. Use this binding to call another Worker without network overhead.
# Docs: https://developers.cloudflare.com/pages/functions/bindings/#service-bindings
# [[services]]
# binding = "MY_SERVICE"
# service = "my-service"

# To use different bindings for preview and production environments, follow the examples below.
# When using environment-specific overrides for bindings, ALL bindings must be specified on a per-environment basis.
# Docs: https://developers.cloudflare.com/pages/functions/wrangler-configuration#environment-specific-overrides

######## PREVIEW environment config ########
[env.preview.vars]
GITHUB_APP_NAME = "Codius Workers Preview"
GITHUB_CLIENT_ID = "Ov23libJRiE7jIZW7EPg"
CF_DISPATCH_NAMESPACE = "testing"
DISPATCHER_HOSTNAME = "coil.app"

[[env.preview.d1_databases]]
binding = "DB" # i.e. available in your Worker on env.DB
database_name = "test-codius-workers"
database_id = "799c2160-d538-4d84-a561-b422b5f9e365"
preview_database_id = "DB"
migrations_dir = "drizzle"

[[env.preview.durable_objects.bindings]]
name = "BILLING_DURABLE_OBJECT"
class_name = "BillingDurableObject"
script_name = 'dispatcher'

######## PRODUCTION environment config ########

[env.production.vars]
GITHUB_APP_NAME = "Codius Workers"
GITHUB_CLIENT_ID = "Ov23liEdnHl3ABF7RpBD"
CF_DISPATCH_NAMESPACE = "testing"
DISPATCHER_HOSTNAME = "coil.app"

[[env.production.d1_databases]]
binding = "DB" # i.e. available in your Worker on env.DB
database_name = "test-codius-workers"
database_id = "799c2160-d538-4d84-a561-b422b5f9e365"
preview_database_id = "DB"
migrations_dir = "drizzle"

[[env.production.durable_objects.bindings]]
name = "BILLING_DURABLE_OBJECT"
class_name = "BillingDurableObject"
script_name = 'dispatcher'
